#!/bin/bash
#list="
#smmika
#"

UPASS=`dd if=/dev/urandom count=1 2> /dev/null | uuencode -m - | sed -ne 2p | cut -c-8`
PASS=`perl -e "print(\"userPassword: {CRYPT}\".crypt(\"$UPASS\",\"frat-salt\").\"\n\");"`
LDAP_HOST=qa-ntop01
LDAP_ROOT_PASSWD=Welcome1
ROOT_BIND_DN="cn=admin,dc=company,dc=net"
BASE_DN="ou=people,ou=skylab,dc=company,dc=net"
PGID_NUM="805"
user_name=$1
firstname=$2
lastname=$3
list=$4
gecos="${firstname} ${lastname}"
file="/tmp/${user_name}.log"
pw_string="\$1\$i5djLBLg\$0HDC8Z0JUyF4B8jfuZzjH0"
SHELL="/bin/bash"
EXPECTED_ARGS=4
E_BADARGS=65
SEND=/usr/sbin/sendmail
EPOCH=`perl -e 'printf qq{%d\n},time/86400'`
SHADOW=`expr $EPOCH - 90`
LDIF=/tmp/TEMPLATE_LDIF

# Check args
if [ $# -ne $EXPECTED_ARGS ]
then
  echo "Usage: `basename $0` {uid} {first name} {last name} {server}"
  exit $E_BADARGS
else


# Check uid
check_uid() {
for n in $(seq 1101 1 1380) ; do
uid=`ldapsearch -h $LDAP_HOST -x -b "$BASE_DN" | grep "uidNumber: ${n}"`
  if [ $? = 1 ]; then
      echo "Number $n is currently not assigned." >> $file
      echo "uidNumber is: $n" >> $file
      UID_NUM=$n
      break
  fi
done
}
check_uid
#userPassword:: e0NSWVBUfWpvdVBKa0tnUlBGbmc=


echo "
dn: uid=$user_name,$BASE_DN
changetype: add
shadowMin: 10
userPassword:: e0NSWVBUfWpvdVBKa0tnUlBGbmc=
loginShell: $SHELL
uidNumber: $UID_NUM
gidNumber: $PGID_NUM
shadowFlag: 134538308
shadowExpire: -1
shadowMax: 90
uid: $user_name
objectClass: account
objectClass: posixAccount
objectClass: top
objectClass: shadowAccount
gecos: $gecos
shadowLastChange: ${SHADOW}
cn: $gecos
homeDirectory: /home/$user_name
shadowInactive: 90
shadowWarning: 7
" > $LDIF

adduser() {
	ldapadd -a -h $LDAP_HOST -d 256 -x -D $ROOT_BIND_DN -w $LDAP_ROOT_PASSWD  -f $LDIF
}

mailit() {
DOM="company.com"
MAIL="labadmin@${DOM}"
MUSER="${user_name}@${DOM}"
FROM="labadmin@${DOM}"
# Mail to user
{
echo "To: ${MUSER}"
echo "From: ${FROM}"
echo "Cc: ${MAIL}"
echo "X-MSMail-Priority: Normal"
echo "Subject: An ldap account has been created for ${gecos}"
echo "
Hello,

The HQ Development Lab ldap account for $gecos has been created.
You will be required to change it when you first login.

Your uid is: ${user_name}
Your password: Welcome1

Regards,
Corp IT
"
} |$SEND -t $MAIL
}

# Check if user has ldap account
check_ldap_account() {
ldapsearch -h $LDAP_HOST -x -b "uid=$user_name,$BASE_DN"
if [ $? = 0 ]; then
        echo "${user_name} is already in LDAP. No need to add" >> $file
	echo "exiting..."
	exit 1
        # Check uidNumber
        UID_NUMBER=`ldapsearch -h $LDAP_HOST -x -b "uid=$user_name,$BASE_DN" | grep uidNumber | cut -d: -f2 | cut -d' ' -f2`
        if [ $UID_NUMBER = $UID_NUM ] ; then
                echo "The ldap uidNumber : $UID_NUMBER = $UID_NUM" >> $file
        else
                echo "The ldap uidNumber: $UID_NUMBER != $UID_NUM" >> $file
		echo "The uidNumber will be: $UID_NUM"
		
		echo "This is incorrect and needs to be looked at."
		exit 1
        fi
elif [ $? = 32 ]; then
        echo "User: ${user_name} does not exist in ldap" >> $file
        echo "Adding ${user_name} in LDAP." >> $file
        #ldapadd -a -h $LDAP_HOST -d 256 -x -D $ROOT_BIND_DN -w $LDAP_ROOT_PASSWD  -f TEMPLATE_LDIF
	adduser
	mailit
fi
}

# Check if user has local account
check_local_account() {
        ssh root@$i "grep $user_name /etc/passwd"
}

# Check if server is on ldap
check_server_ldap() {
	ssh $i 'getent passwd | grep ldaptest'
}
# Check user using getent
chk_user() {
	ssh $i "getent passwd | grep $user_name" >> $file
}
# Check user in ldap
search_user() {
	 ldapsearch -h $LDAP_HOST -x -b "$BASE_DN" | grep "${user_name}"
}
############# ldapadd -a -h $LDAP_HOST -d 256 -x -D $ROOT_BIND_DN -w $LDAP_ROOT_PASSWD  -f TEMPLATE_LDIF
for i in $list ; do
ping -c 1 $i
if [ $? = 0 ];then
# Check if user has local account
check_local_account
        if [ $? = 0 ] ; then
                echo "User $user_name is in the passwd file on $i" >> $file
                echo "No need to create a local account for $user_name on $i" >> $file
		#ldapsearch -h $LDAP_HOST -x -b "$BASE_DN" | grep "${user_name}"
		check_ldap_account
        elif [ $? = 1 ] ; then
                echo "User $user_name is not in the passwd file on $i" >> $file
		check_server_ldap
                if [ $? = 0 ] ; then
                        echo "$i is an ldap client" >> $file
			#echo "Checking uidNumber for $user_name" >> $file
			#UID_NUMBER=`ldapsearch -h $LDAP_HOST -x -b "uid=$user_name,$BASE_DN" | grep uidNumber | cut -d: -f2 | cut -d' ' -f2`
			#UID_NUM=$UID_NUMBER
                        #echo "Adding $user_name local account" >> $file
                        #echo "-------------------------" >> $file
                        #ssh $i "useradd -u $UID_NUM -g $PGID_NUM  -d /home/$user_name -s $SHELL -c '$user_name' -m $user_name && \
			#usermod -p '$pw_string' $user_name && \
			#usermod -L $user_name && chage -d 0 $user_name && usermod -U $user_name"
			search_user
			if [ $? = 0 ]; then
				echo "${user_name} is already in LDAP. No need to add" >> $file
			else
				echo "Adding ${user_name} in LDAP" >> $file
				adduser
				mailit
			fi
                        chk_user
                else
                        echo "$i is NOT an ldap client" >> $file
                        echo "Adding $user_name local account" >> $file
			echo "Checking uidNumber for $user_name if user is already in ldap" >> $file
			UID_NUMBER=`ldapsearch -h $LDAP_HOST -x -b "uid=$user_name,$BASE_DN" | grep uidNumber | cut -d: -f2 | cut -d' ' -f2`
			if [ "x $UID_NUMBER" == "x """ ]; then
                                ssh $i "useradd -u $UID_NUM -g $PGID_NUM -d /home/$user_name -s $SHELL -c '$gecos' -m $user_name && \
                                usermod -p '$pw_string' $user_name && \
                                usermod -L $user_name && chage -d 0 $user_name && usermod -U $user_name"
                                search_user
				mailit
			else
                                UID_NUM=$UID_NUMBER
                                ssh $i "useradd -u $UID_NUM -g $PGID_NUM -d /home/$user_name -s $SHELL -c '$gecos' -m $user_name && \
                                usermod -p '$pw_string' $user_name && \
                                usermod -L $user_name && chage -d 0 $user_name && usermod -U $user_name"
                                search_user
				mailit
			fi

			if [ $? = 0 ]; then
				 echo "${user_name} is already in LDAP. No need to add" >> $file
			else
				echo "Adding ${user_name} in LDAP." >> $file
				adduser
				mailit
			fi
			chk_user
                fi
        fi
fi
echo ""
done
fi
